<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project">

	<select id="getProjList" parameterType="hashmap" resultType="hashmap">
		SELECT /* project.getProjList */
		       PROJ_ID, PROJ_NM, PROJ_STAT_CD, PROJ_START_DT, PROJ_END_DT, PROJ_EMP_CNT
		     , date_format(REG_DTM,'%Y-%m-%d %H:%i:%s') REG_DTM
		, date_format(MOD_DTM,'%Y-%m-%d %H:%i:%s') MOD_DTM
		  FROM TB_PROJ
		 WHERE 1 = 1
		<if test="PROJ_ID != null">
			AND PROJ_ID = #{PROJ_ID}
		</if>
		<if test="PROJ_NM != null">
			AND PROJ_NM LIKE CONCAT('%', #{PROJ_NM}, '%')
		</if>
		ORDER BY PROJ_ID DESC
		<if test="start != null">
			limit #{start}, #{limit}
		</if>
	</select>


	<insert id="insertProj" parameterType="hashmap">
		INSERT /* project.insertProj */
		INTO TB_PROJ
		(PROJ_NM, PROJ_STAT_CD, PROJ_START_DT, PROJ_END_DT, PROJ_EMP_CNT, REG_DTM, MOD_DTM)
		VALUES
		(#{PROJ_NM}, #{PROJ_STAT_CD}, #{PROJ_START_DT}, #{PROJ_END_DT}, 0, NOW(), NOW())
	</insert>

	<update id="updateProj" parameterType="hashmap">
		UPDATE /* project.updateProj */
			TB_PROJ
		SET PROJ_NM = IFNULL(#{PROJ_NM}, PROJ_NM)
		  ,PROJ_STAT_CD = IFNULL(#{PROJ_STAT_CD}, PROJ_STAT_CD)
		  ,PROJ_START_DT = IFNULL(#{PROJ_START_DT}, PROJ_START_DT)
		  ,PROJ_END_DT = IFNULL(#{PROJ_END_DT}, PROJ_END_DT)
		  ,MOD_DTM = NOW()
		WHERE 1 = 1
		  AND PROJ_ID = #{PROJ_ID}
	</update>

	<delete id="deleteProj" parameterType="hashmap">
		DELETE /* project.deleteProj */
		TB_PROJ
		 WHERE 1 = 1
		   AND PROJ_ID = #{PROJ_ID}
	</delete>

	<select id="getProjListCnt" parameterType="hashmap" resultType="int">
		SELECT /* project.getProjListCnt */
		       COUNT(*)
		  FROM TB_PROJ
		 WHERE 1 = 1
		<if test="PROJ_ID != null">
			AND PROJ_ID = #{PROJ_ID}
		</if>
		<if test="PROJ_NM != null">
			AND PROJ_NM LIKE CONCAT('%', #{PROJ_NM}, '%')
		</if>
	</select>


	<select id="getProjAddEmpList" parameterType="hashmap" resultType="hashmap">
		SELECT /* project.getProjAddEmpList */
		A.EMP_ID, A.EMP_NO, A.EMAIL, A.PASSWD, A.EMP_NM, A.MNG_LVL, A.ENT_DT, A.REG_DTM, A.MOD_DTM
		FROM TB_EMP A
		WHERE 1 = 1
		  AND NOT EXISTS (
		      SELECT 'X' FROM TB_PROJ_EMP WHERE PROJ_ID = #{PROJ_ID} AND A.EMP_ID = EMP_ID
		)
		<if test="EMP_NM != null">
			AND A.EMP_NM LIKE CONCAT('%', #{EMP_NM}, '%')
		</if>
		ORDER BY A.EMP_NM DESC
	</select>


	<select id="getProjEmpList" parameterType="hashmap" resultType="hashmap">
		SELECT /* project.getProjEmpList */
		       A.PROJ_ID, A.EMP_ID, B.EMP_NO, B.EMP_NM, B.MNG_LVL, A.PROJ_ROLE, A.EMP_PROJ_START_DT, A.EMP_PROJ_END_DT
		      ,A.EMP_PROJ_LVL, A.EMP_PRICE
		  FROM TB_PROJ_EMP A
		 INNER JOIN TB_EMP B ON A.EMP_ID = B.EMP_ID
		 WHERE 1 = 1
		<if test="PROJ_ID != null">
			AND PROJ_ID = #{PROJ_ID}
		</if>
		ORDER BY EMP_NM DESC
	</select>

	<insert id="insertProjEmp" parameterType="hashmap">
		INSERT /* project.insertProjEmp */
		  INTO TB_PROJ_EMP
			(PROJ_ID, EMP_ID, PROJ_ROLE, EMP_PROJ_START_DT, EMP_PROJ_END_DT, EMP_PROJ_LVL, EMP_PRICE)
		VALUES
			(#{PROJ_ID}, #{EMP_ID}, #{PROJ_ROLE}, #{EMP_PROJ_START_DT}, #{EMP_PROJ_END_DT}, #{EMP_PROJ_LVL}, #{EMP_PRICE})
	</insert>


</mapper>


