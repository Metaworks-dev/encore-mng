<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="projwork">

	<select id="getEmpList" parameterType="hashmap" resultType="hashmap">
		SELECT /* projwork.getEmpList */
		       EMP_ID, EMP_NO, EMAIL, PASSWD, EMP_NM, MNG_LVL, ENT_DT, REG_DTM, MOD_DTM
		  FROM TB_EMP
		 WHERE 1 = 1
		<if test="EMP_ID != null">
		   AND EMP_ID = #{EMP_ID}
		</if>
		<if test="EMP_NM != null">
			AND EMP_NM LIKE CONCAT('%', #{EMP_NM}, '%')
		</if>
		<if test="EMAIL != null">
			AND EMAIL = #{EMAIL}
		    AND PASSWD = #{PASSWD}
		</if>
         ORDER BY EMP_ID DESC
		<if test="start != null">
		limit #{start}, #{limit}
		</if>
	</select>

	<select id="getEmpListCnt" parameterType="hashmap" resultType="int">
		SELECT /* employ.getEmpListCnt */
		COUNT(*)
		FROM TB_EMP
		WHERE 1 = 1
		<if test="EMP_ID != null">
			AND EMP_ID = #{EMP_ID}
		</if>
		<if test="EMAIL != null">
			AND EMAIL = #{EMAIL}
			AND PASSWD = #{PASSWD}
		</if>
	</select>

	<insert id="insertProjWork" parameterType="hashmap">
		INSERT /* projwork.insertProjWork */
		  INTO TB_PROJ_WORK
            (PROJ_ID, EMP_ID, WORK_DT, WORK_STAT_CD, PROFIT_YN, REG_DTM, MOD_DTM)
        SELECT #{PROJ_ID}, IFNULL(#{EMP_ID}, #{SESS_EMP_ID}) EMP_ID
              ,A.YYYY_MM_DD WORK_DT
              ,#{WORK_STAT_CD} WORK_STAT_CD
			  ,'Y' PROFIT_YN
              ,NOW(), NOW()
          FROM TB_CALENDAR A
         WHERE 1 = 1
           <if test="HOLIDAY_CHK_CNT == 'on'">
	           AND A.HOLIDAY_YN = 'N'
		   </if>
		   AND A.YYYY_MM_DD BETWEEN #{START_DT} AND #{END_DT}
           AND NOT EXISTS ( SELECT 'X'
                              FROM TB_PROJ_WORK
            				 WHERE PROJ_ID = #{PROJ_ID}
            				   AND EMP_ID = #{SESS_EMP_ID}
                               AND WORK_DT = A.YYYY_MM_DD )
	</insert>
	
	<update id="updateEmp" parameterType="hashmap">
		UPDATE /* employ.updateEmp */
			TB_EMP
		SET EMAIL = IFNULL(CASE WHEN #{EMAIL} = '' THEN NULL ELSE #{EMAIL} END, EMAIL)
		  ,PASSWD = IFNULL(CASE WHEN #{PASSWD} = '' THEN NULL ELSE #{PASSWD} END, PASSWD)
		  ,EMP_NM = IFNULL(CASE WHEN #{EMP_NM} = '' THEN NULL ELSE #{EMP_NM} END, EMP_NM)
		  ,EMP_NO = IFNULL(CASE WHEN #{EMP_NO} = '' THEN NULL ELSE #{EMP_NO} END, EMP_NO)
		  ,MNG_LVL = IFNULL(CASE WHEN #{MNG_LVL} = '' THEN NULL ELSE #{MNG_LVL} END, MNG_LVL)
		  ,ENT_DT = IFNULL(CASE WHEN #{ENT_DT} = '' THEN NULL ELSE #{ENT_DT} END, ENT_DT)
		  ,MOD_DTM = NOW()
		WHERE 1 = 1
		  AND EMP_ID = #{EMP_ID}
	</update>

	<delete id="deleteProjWork" parameterType="hashmap">
		DELETE /* projwork.deleteProjWork */
			TB_PROJ_WORK
		 WHERE 1 = 1
		   AND EMP_ID = #{EMP_ID}
	</delete>



	<select id="getProjWorkCalList" parameterType="hashmap" resultType="hashmap">
		SELECT /* projwork.getProjWorkCalList */
			A.YYYY_MM
			 ,MAX(SUBSTR(A.YYYY_MM, 6, 2)) MM
			 ,MAX(B.PROJ_ID) PROJ_ID
			 ,MAX(C.PROJ_NM) PROJ_NM
			 ,COUNT(*) DD
			 ,IFNULL(COUNT(*) - COUNT(CASE WHEN HOLIDAY_YN = 'Y' THEN 1 END), 0) WORK_DD
			 ,IFNULL(SUM(FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD)), 0) PROJ_WORK_DD
			 ,IFNULL(ROUND(COUNT(FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD))
							/
						   (COUNT(*) - COUNT(CASE WHEN HOLIDAY_YN = 'Y' THEN 1 END))
						  * 100, 1), 0)
			  PROJ_WORK_RATE
			 ,MAX(CASE WHEN A.DD = '01' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D01
			 ,MAX(CASE WHEN A.DD = '02' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D02
			 ,MAX(CASE WHEN A.DD = '03' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D03
			 ,MAX(CASE WHEN A.DD = '04' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D04
			 ,MAX(CASE WHEN A.DD = '05' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D05
			 ,MAX(CASE WHEN A.DD = '06' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D06
			 ,MAX(CASE WHEN A.DD = '07' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D07
			 ,MAX(CASE WHEN A.DD = '08' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D08
			 ,MAX(CASE WHEN A.DD = '09' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D09
			 ,MAX(CASE WHEN A.DD = '10' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D10
			 ,MAX(CASE WHEN A.DD = '11' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D11
			 ,MAX(CASE WHEN A.DD = '12' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D12
			 ,MAX(CASE WHEN A.DD = '13' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D13
			 ,MAX(CASE WHEN A.DD = '14' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D14
			 ,MAX(CASE WHEN A.DD = '15' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D15
			 ,MAX(CASE WHEN A.DD = '16' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D16
			 ,MAX(CASE WHEN A.DD = '17' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D17
			 ,MAX(CASE WHEN A.DD = '18' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D18
			 ,MAX(CASE WHEN A.DD = '19' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D19
			 ,MAX(CASE WHEN A.DD = '20' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D20
			 ,MAX(CASE WHEN A.DD = '21' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D21
			 ,MAX(CASE WHEN A.DD = '22' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D22
			 ,MAX(CASE WHEN A.DD = '23' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D23
			 ,MAX(CASE WHEN A.DD = '24' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D24
			 ,MAX(CASE WHEN A.DD = '25' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D25
			 ,MAX(CASE WHEN A.DD = '26' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D26
			 ,MAX(CASE WHEN A.DD = '27' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D27
			 ,MAX(CASE WHEN A.DD = '28' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D28
			 ,MAX(CASE WHEN A.DD = '29' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D29
			 ,MAX(CASE WHEN A.DD = '30' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D30
			 ,MAX(CASE WHEN A.DD = '31' AND B.WORK_DT IS NOT NULL THEN B.WORK_STAT_CD END) D31
			 ,MAX(CASE WHEN A.DD = '01' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H01
			 ,MAX(CASE WHEN A.DD = '02' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H02
			 ,MAX(CASE WHEN A.DD = '03' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H03
			 ,MAX(CASE WHEN A.DD = '04' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H04
			 ,MAX(CASE WHEN A.DD = '05' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H05
			 ,MAX(CASE WHEN A.DD = '06' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H06
			 ,MAX(CASE WHEN A.DD = '07' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H07
			 ,MAX(CASE WHEN A.DD = '08' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H08
			 ,MAX(CASE WHEN A.DD = '09' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H09
			 ,MAX(CASE WHEN A.DD = '10' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H10
			 ,MAX(CASE WHEN A.DD = '11' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H11
			 ,MAX(CASE WHEN A.DD = '12' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H12
			 ,MAX(CASE WHEN A.DD = '13' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H13
			 ,MAX(CASE WHEN A.DD = '14' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H14
			 ,MAX(CASE WHEN A.DD = '15' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H15
			 ,MAX(CASE WHEN A.DD = '16' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H16
			 ,MAX(CASE WHEN A.DD = '17' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H17
			 ,MAX(CASE WHEN A.DD = '18' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H18
			 ,MAX(CASE WHEN A.DD = '19' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H19
			 ,MAX(CASE WHEN A.DD = '20' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H20
			 ,MAX(CASE WHEN A.DD = '21' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H21
			 ,MAX(CASE WHEN A.DD = '22' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H22
			 ,MAX(CASE WHEN A.DD = '23' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H23
			 ,MAX(CASE WHEN A.DD = '24' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H24
			 ,MAX(CASE WHEN A.DD = '25' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H25
			 ,MAX(CASE WHEN A.DD = '26' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H26
			 ,MAX(CASE WHEN A.DD = '27' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H27
			 ,MAX(CASE WHEN A.DD = '28' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H28
			 ,MAX(CASE WHEN A.DD = '29' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H29
			 ,MAX(CASE WHEN A.DD = '30' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H30
			 ,MAX(CASE WHEN A.DD = '31' AND (A.HOLIDAY_YN = 'Y' OR A.WEEK_DAY IN ('1', '7')) THEN IFNULL(A.HOLIDAY_NM, A.WEEK_DAY) END) H31
		FROM TB_CALENDAR A
				 LEFT OUTER JOIN TB_PROJ_WORK B ON A.YYYY_MM_DD = B.WORK_DT AND B.EMP_ID = #{SESS_EMP_ID}
				 LEFT OUTER JOIN TB_PROJ C ON B.PROJ_ID = C.PROJ_ID
		WHERE 1 = 1
		  AND A.YYYY_MM LIKE CONCAT(DATE_FORMAT(NOW(), '%Y'), '%')
		GROUP BY A.YYYY_MM
		       /* , SUBSTR(A.YYYY_MM, 6, 2), B.PROJ_ID ,C.PROJ_NM */
	</select>


</mapper>


