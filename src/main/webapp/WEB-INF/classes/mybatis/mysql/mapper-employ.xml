<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="employ">

	<select id="getEmpList" parameterType="hashmap" resultType="hashmap">
		SELECT /* employ.getEmpList */
		       EMP_ID, EMP_NO, EMAIL, PASSWD, EMP_NM, MNG_LVL, ENT_DT, REG_DTM, MOD_DTM, DEPT
		  FROM TB_EMP
		 WHERE 1 = 1
		<if test="EMP_ID != null">
		   AND EMP_ID = #{EMP_ID}
		</if>
		<if test="EMP_NM != null">
			AND EMP_NM LIKE CONCAT('%', #{EMP_NM}, '%')
		</if>
		<if test="EMAIL != null">
			AND EMAIL = #{EMAIL}
		    AND PASSWD = #{PASSWD}
		</if>
         ORDER BY EMP_ID DESC
		<if test="start != null">
		limit #{start}, #{limit}
		</if>
	</select>

	<select id="getEmpListCnt" parameterType="hashmap" resultType="int">
		SELECT /* employ.getEmpListCnt */
		COUNT(*)
		FROM TB_EMP
		WHERE 1 = 1
		<if test="EMP_ID != null">
			AND EMP_ID = #{EMP_ID}
		</if>
		<if test="EMAIL != null">
			AND EMAIL = #{EMAIL}
			AND PASSWD = #{PASSWD}
		</if>
	</select>

	<insert id="insertEmp" parameterType="hashmap">
		INSERT /* employ.insertEmp */
		  INTO TB_EMP
			(EMP_NO, EMAIL, PASSWD, EMP_NM, MNG_LVL, ENT_DT, REG_DTM, MOD_DTM)
		VALUES
			(#{EMP_NO}, #{EMAIL}, #{PASSWD}, #{EMP_NM}, #{MNG_LVL}, #{ENT_DT}, NOW(), NOW())
	</insert>
	
	<update id="updateEmp" parameterType="hashmap">
		UPDATE /* employ.updateEmp */
			   TB_EMP
		   SET EMAIL = IFNULL(CASE WHEN #{EMAIL} = '' THEN NULL ELSE #{EMAIL} END, EMAIL)
		      ,PASSWD = IFNULL(CASE WHEN #{PASSWD} = '' THEN NULL ELSE #{PASSWD} END, PASSWD)
		      ,EMP_NM = IFNULL(CASE WHEN #{EMP_NM} = '' THEN NULL ELSE #{EMP_NM} END, EMP_NM)
		      ,EMP_NO = IFNULL(CASE WHEN #{EMP_NO} = '' THEN NULL ELSE #{EMP_NO} END, EMP_NO)
		      ,MNG_LVL = IFNULL(CASE WHEN #{MNG_LVL} = '' THEN NULL ELSE #{MNG_LVL} END, MNG_LVL)
			  ,ENT_DT = IFNULL(CASE WHEN #{ENT_DT} = '' THEN NULL ELSE #{ENT_DT} END, ENT_DT)
		      ,MOD_DTM = NOW()
		 WHERE 1 = 1
		   AND EMP_ID = #{EMP_ID}
	</update>

	<delete id="deleteEmp" parameterType="hashmap">
		DELETE /* employ.deleteEmp */
			   TB_EMP
		 WHERE 1 = 1
		   AND EMP_ID = #{EMP_ID}
	</delete>


	<select id="getProjWorkSum" parameterType="hashmap" resultType="hashmap">
		SELECT /* employ.getProjWorkSum */
			A.PROJ_ID, A.EMP_ID, C.EMP_NO, C.EMP_NM, A.EMP_PRICE, C.MNG_LVL
			 ,DATE_FORMAT(STR_TO_DATE(B.WORK_DT, '%Y-%m-%d'), '%Y') YYYY
			 ,MAX(BASIC_QUAL) BASIC_QUAL
			 ,MAX(JOB_SKILL) JOB_SKILL
			 ,MAX(OFFCE_ATTUDE) OFFCE_ATTUDE
			 ,IFNULL(SUM(CASE WHEN DATE_FORMAT(STR_TO_DATE(B.WORK_DT, '%Y-%m-%d'), '%m') = 1 THEN FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD) END), 0) M01
			 ,IFNULL(SUM(CASE WHEN DATE_FORMAT(STR_TO_DATE(B.WORK_DT, '%Y-%m-%d'), '%m') = 2 THEN FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD) END), 0) M02
			 ,IFNULL(SUM(CASE WHEN DATE_FORMAT(STR_TO_DATE(B.WORK_DT, '%Y-%m-%d'), '%m') = 3 THEN FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD) END), 0) M03
			 ,IFNULL(SUM(CASE WHEN DATE_FORMAT(STR_TO_DATE(B.WORK_DT, '%Y-%m-%d'), '%m') = 4 THEN FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD) END), 0) M04
			 ,IFNULL(SUM(CASE WHEN DATE_FORMAT(STR_TO_DATE(B.WORK_DT, '%Y-%m-%d'), '%m') = 5 THEN FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD) END), 0) M05
			 ,IFNULL(SUM(CASE WHEN DATE_FORMAT(STR_TO_DATE(B.WORK_DT, '%Y-%m-%d'), '%m') = 6 THEN FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD) END), 0) M06
			 ,IFNULL(SUM(CASE WHEN DATE_FORMAT(STR_TO_DATE(B.WORK_DT, '%Y-%m-%d'), '%m') = 7 THEN FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD) END), 0) M07
			 ,IFNULL(SUM(CASE WHEN DATE_FORMAT(STR_TO_DATE(B.WORK_DT, '%Y-%m-%d'), '%m') = 8 THEN FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD) END), 0) M08
			 ,IFNULL(SUM(CASE WHEN DATE_FORMAT(STR_TO_DATE(B.WORK_DT, '%Y-%m-%d'), '%m') = 9 THEN FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD) END), 0) M09
			 ,IFNULL(SUM(CASE WHEN DATE_FORMAT(STR_TO_DATE(B.WORK_DT, '%Y-%m-%d'), '%m') = 10 THEN FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD) END), 0) M10
			 ,IFNULL(SUM(CASE WHEN DATE_FORMAT(STR_TO_DATE(B.WORK_DT, '%Y-%m-%d'), '%m') = 11 THEN FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD) END), 0) M11
			 ,IFNULL(SUM(CASE WHEN DATE_FORMAT(STR_TO_DATE(B.WORK_DT, '%Y-%m-%d'), '%m') = 12 THEN FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD) END), 0) M12
			 ,IFNULL(SUM(FN_GET_WORK_DT_VAL(B.WORK_DT, B.WORK_STAT_CD)), 0) M_TOT
		FROM TB_EMP C
		LEFT OUTER JOIN TB_PROJ_EMP A ON A.EMP_ID = C.EMP_ID
		LEFT OUTER JOIN TB_PROJ_WORK B ON A.PROJ_ID = B.PROJ_ID AND A.EMP_ID = B.EMP_ID  AND DATE_FORMAT(STR_TO_DATE(B.WORK_DT, '%Y-%m-%d'), '%Y') = IFNULL(#{YYYY}, DATE_FORMAT(now(), '%Y'))
		WHERE 1 = 1
		GROUP BY A.PROJ_ID, A.EMP_ID, C.EMP_NO, C.EMP_NM
	</select>

</mapper>


